<?xml version="1.0" encoding="UTF-8"?>
<ecoSpold 	
	xsi:schemaLocation="http://www.EcoInvent.org/EcoSpold02 ../Schemas/EcoSpold02.xsd" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	
	xmlns="http://www.EcoInvent.org/EcoSpold02"	
	>
	#foreach($dataset in $ecoSpold.datasets)
	<activityDataset>
		
		## the activtiy description
		#if($dataset.description)
		<activityDescription>
			#set($description = $dataset.description)
		
			<activity
				
				#if($description.id)
					id="$description.id"
				#end
				
				#if($description.activityNameId)
					activityNameId="$description.activityNameId"
				#end
				
				#if($description.parentActivityId)
					parentActivityId="$description.parentActivityId"
				#end
				
				#if($description.inheritanceDepth)
					inheritanceDepth="$description.inheritanceDepth"
				#end
				
				#if($description.type)
					type="$description.type"
				#end
				
				#if($description.specialActivityType)
					specialActivityType="$description.specialActivityType"
				#end
				
				#if($description.energyValues)
					energyValues="$description.energyValues"
				#end
				
				#if($description.masterAllocationPropertyId)
					masterAllocationPropertyId="$description.masterAllocationPropertyId"
				#end
				
				#if($description.datasetIcon)
					datasetIcon="$description.datasetIcon"
				#end
				
				>
				#foreach($it in $description.name)                
					<activityName xml:lang="$it.langCode">$it.value</activityName>
				#end
				
				#foreach($it in $description.synonyms)                
					<synonym xml:lang="$it.langCode">$it.value</synonym>
				#end
				
				#foreach($it in $description.includedActivitiesStart)                
					<includedActivitiesStart xml:lang="$it.langCode">$it.value</includedActivitiesStart>
				#end
				#foreach($it in $description.includedActivitiesEnd)                
					<includedActivitiesEnd xml:lang="$it.langCode">$it.value</includedActivitiesEnd>
				#end
				
				#foreach($it in $description.allocationComment)                
					<allocationComment xml:lang="$it.langCode">$it.value</allocationComment>
				#end
				#if($description.allocationComment)
					<allocationComment>
					#foreach($it in $description.allocationComment.text)   
						<text 
							#if($it.langCode)
								xml:lang="$it.langCode"       
							#end
							index="$it.index">$it.value</text>      
					#end
					#foreach($it in $description.allocationComment.images)   
						<imageUrl 
							index="$it.index">$it.url</imageUrl>      
					#end
					#foreach($it in $description.allocationComment.variables)   
						<variable name="$it.name">$it.value</variable>      
					#end
					</allocationComment>
				#end
				#if($description.generalComment)
					<generalComment>
					#foreach($it in $description.generalComment.text)   
						<text 
							#if($it.langCode)
								xml:lang="$it.langCode"       
							#end
							index="$it.index">$it.value</text>      
					#end
					#foreach($it in $description.generalComment.images)   
						<imageUrl 
							index="$it.index">$it.url</imageUrl>      
					#end
					#foreach($it in $description.generalComment.variables)   
						<variable name="$it.name">$it.value</variable>      
					#end
					</generalComment>
				#end
				#foreach($tags in $description.tags)                
					<tag>$tags</tag>
				#end
			</activity>
			
			## classifications
			#foreach($classification in $dataset.classifications)
			<classification
				
				#if($classification.classificationId) 
					classificationId="$classification.classificationId" 
				#end
				>
				
				#foreach ($it in $classification.classificationSystem)
                  <classificationSystem xml:lang="$it.langCode">$it.value</classificationSystem>
				#end
				
                #foreach ($it in $classification.classificationValue)
                  <classificationValue xml:lang="$it.langCode">$it.value</classificationValue>
                #end			
				
			</classification>
			#end ##foreach classifiactions
				
			## geography
			#if($dataset.geography)
    			#set($geography = $dataset.geography)
    			<geography 
    			 	#if($geography.geographyId)
    			 		geographyId="$geography.geographyId"
    			 	#end
    			 	>
    			 	#foreach($it in $geography.shortNames)                
    					<shortname xml:lang="$it.langCode">$it.value</shortname>
					#end
					#if($geography.comment)
						<comment>
    					#foreach($it in $geography.comment.text)   
    						<text 
    							#if($it.langCode)
    								xml:lang="$it.langCode"       
    							#end
    							index="$it.index">$it.value</text>      
    					#end
    					#foreach($it in $geography.comment.images)   
    						<imageUrl 
    							index="$it.index">$it.url</imageUrl>      
    					#end
    					#foreach($it in $geography.comment.variables)   
    						<variable name="$it.name">$it.value</variable>      
    					#end	
                        </comment>
					#end
    			</geography>
			#end
			
			## technology
			#if($dataset.technology)
    			#set($technology = $dataset.technology)
    			<technology
    				#if($technology.technologyLevel)
    					technologyLevel="$technology.technologyLevel"
    				#end
    				>
					#if($technology.comment)
						<comment>
    					#foreach($it in $technology.comment.text)   
    						<text 
    							#if($it.langCode)
    								xml:lang="$it.langCode"       
    							#end
    							index="$it.index">$it.value</text>      
    					#end
    					#foreach($it in $technology.comment.images)   
    						<imageUrl 
    							index="$it.index">$it.url</imageUrl>      
    					#end
    					#foreach($it in $technology.comment.variables)   
    						<variable name="$it.name">$it.value</variable>      
    					#end	
                        </comment>
					#end
    			</technology>	
			#end
			
			## time period
			#if($dataset.timePeriod)
				#set($timePeriod = $dataset.timePeriod)
				<timePeriod
					#if($timePeriod.dataValidForEntirePeriod)
						isDataValidForEntirePeriod="$timePeriod.dataValidForEntirePeriod"
					#end
					#if($timePeriod.startDate)                
						startDate="$timePeriod.startDate"
					#end
					#if($timePeriod.endDate) 
						endDate="$timePeriod.endDate"						
					#end					
					>
					#if($timePeriod.comment)
						<comment>
    					#foreach($it in $timePeriod.comment.text)   
    						<text 
    							#if($it.langCode)
    								xml:lang="$it.langCode"       
    							#end
    							index="$it.index">$it.value</text>      
    					#end
    					#foreach($it in $timePeriod.comment.images)   
    						<imageUrl 
    							index="$it.index">$it.url</imageUrl>      
    					#end
    					#foreach($it in $timePeriod.comment.variables)   
    						<variable name="$it.name">$it.value</variable>      
    					#end	
                        </comment>
					#end
				</timePeriod>
			#end
			
			## macro economic scenario
			#set($macroEconomicScenario = $dataset.macroEconomicScenario)
			<macroEconomicScenario
				#if($macroEconomicScenario.scenarioId)
					macroEconomicScenarioId="$macroEconomicScenario.scenarioId"
				#end
				>
				#foreach($it in $macroEconomicScenario.name)                
					<name xml:lang="$it.langCode">$it.value</name>
				#end
				#foreach($it in $macroEconomicScenario.comment)                
					<comment xml:lang="$it.langCode">$it.value</comment>
				#end
			</macroEconomicScenario>
			
        </activityDescription>
		#end ##if description			
		
		<flowData>
			
			## the intermediate exchanges
			#foreach($exchange in $dataset.intermediateExchanges)
				<intermediateExchange					
					#if($exchange.activityLinkId)
						activityLinkId="$exchange.activityLinkId" 
					#end
					#if($exchange.amount)
						amount="$exchange.amount" 
					#end
					#if($exchange.casNumber)
						casNumber="$exchange.casNumber" 
					#end
					#if($exchange.id)
						id="$exchange.id" 
					#end
					#if($exchange.intermediateExchangeId)
						intermediateExchangeId="$exchange.intermediateExchangeId" 
					#end
					#if($exchange.isCalculatedAmount)
						isCalculatedAmount="$exchange.isCalculatedAmount" 
					#end
					#if($exchange.mathematicalRelation)
						mathematicalRelation="$exchange.mathematicalRelation" 
					#end
					#if($exchange.pageNumbers)
						pageNumbers="$exchange.pageNumbers" 
					#end
					#if($exchange.productionVolumeAmount)
						productionVolumeAmount="$exchange.productionVolumeAmount" 
					#end
					#if($exchange.sourceId)
						sourceId="$exchange.sourceId" 
					#end
					#if($exchange.specificAllocationPropertyId)
						specificAllocationPropertyId="$exchange.specificAllocationPropertyId" 
					#end
            		#if($exchange.unitId)
						unitId="$exchange.unitId" 
					#end					
					#if($exchange.variableName)
						variableName="$exchange.variableName" 
					#end
					>
				
					#foreach ($it in $exchange.name)
                       <name xml:lang="$it.langCode">$it.value</name>
                	#end
					
					#foreach ($it in $exchange.unitNames)
                       <unitName xml:lang="$it.langCode">$it.value</unitName>
                	#end
					
					#foreach ($it in $exchange.comment)
                      <comment xml:lang="$it.langCode">$it.value</comment>
                	#end
                	
                	#if($exchange.uncertainty)
                		#set($uncertainty =  $exchange.uncertainty)
                		#parse("ES2Uncertainty.vtl")
                	#end
                
                    #foreach ($it in $exchange.synonym)
                      <synonym xml:lang="$it.langCode">$it.value</synonym>
                    #end
                   
					## TODO: call property template
					## TODO: call transfer coefficient template
					
					#foreach ($it in $exchange.tags)
						<tag>$it</tag>
					#end
					
					#foreach ($it in $exchange.productionVolumeComment)
						<productionVolumeComment xml:lang="$it.langCode">$it.value</productionVolumeComment>
					#end
					
					## product classifications
        			#foreach($classification in $exchange.productClassifications)
        			<classification
        				
        				#if($classification.classificationId) 
        					classificationId="$classification.classificationId" 
        				#end
        				>
        				
        				#foreach ($it in $classification.classificationSystem)
                          <classificationSystem xml:lang="$it.langCode">$it.value</classificationSystem>
        				#end
        				
                        #foreach ($it in $classification.classificationValue)
                          <classificationValue xml:lang="$it.langCode">$it.value</classificationValue>
                        #end			
        				
        			</classification>
        			#end ##foreach classifiactions
					
					#if($exchange.inputGroup)	
						<inputGroup>$exchange.inputGroup</inputGroup>
					#end
					
					#if($exchange.outputGroup)
						<outputGroup>$exchange.outputGroup</outputGroup>
					#end
					
                </intermediateExchange>
			#end ## the intermediate exchanges
			
			#foreach($exchange in $dataset.elementaryExchanges)
				<elementaryExchange		
										
					#if($exchange.amount)
						amount="$exchange.amount" 
					#end					
					#if($exchange.casNumber)
						casNumber="$exchange.casNumber" 
					#end
					#if($exchange.elementaryExchangeId)
						elementaryExchangeId="$exchange.elementaryExchangeId" 
					#end
					#if($exchange.formula)
						formula="$exchange.formula" 
					#end
					#if($exchange.id)
						id="$exchange.id" 
					#end
					#if($exchange.isCalculatedAmount)
						isCalculatedAmount="$exchange.isCalculatedAmount" 
					#end
					#if($exchange.mathematicalRelation)
						mathematicalRelation="$exchange.mathematicalRelation" 
					#end
					#if($exchange.pageNumbers)
						pageNumbers="$exchange.pageNumbers" 
					#end					
					#if($exchange.sourceId)
						sourceId="$exchange.sourceId" 
					#end
					#if($exchange.specificAllocationPropertyId)
						specificAllocationPropertyId="$exchange.specificAllocationPropertyId" 
					#end
            		#if($exchange.unitId)
						unitId="$exchange.unitId" 
					#end					
					#if($exchange.variableName)
						variableName="$exchange.variableName" 
					#end
					>
				
					#foreach ($it in $exchange.name)
                       <name xml:lang="$it.langCode">$it.value</name>
                	#end
					
					#foreach ($it in $exchange.unitNames)
                       <unitName xml:lang="$it.langCode">$it.value</unitName>
                	#end
					
					#foreach ($it in $exchange.comment)
                      <comment xml:lang="$it.langCode">$it.value</comment>
                	#end
                	
                	#if($exchange.uncertainty)
                		#set($uncertainty =  $exchange.uncertainty)
                		#parse("ES2Uncertainty.vtl")
                	#end
                
                    #foreach ($it in $exchange.synonym)
                      <synonym xml:lang="$it.langCode">$it.value</synonym>
                    #end
                   
					## TODO: call property template
					## TODO: call transfer coefficient template
					
					#foreach ($it in $exchange.tags)
						<tag>$it</tag>
					#end
					
					#if($exchange.compartmentId)
    					<compartment subcompartmentId="$exchange.compartmentId">
						
						#foreach($it in $exchange.compartment)
							<compartment xml:lang="$it.langCode">$it.value</compartment>
						#end
						
						#foreach($it in $exchange.subCompartment)
							<subcompartment xml:lang="$it.langCode">$it.value</subcompartment>
						#end
    					</compartment>
					#end
										
					#if($exchange.inputGroup)	
						<inputGroup>$exchange.inputGroup</inputGroup>
					#end
					
					#if($exchange.outputGroup)
						<outputGroup>$exchange.outputGroup</outputGroup>
					#end				
                </elementaryExchange>
			#end ##foreach elementaryExchange
			
			#foreach($parameter in $dataset.parameters)
			<parameter
				#if($parameter.amount)
					amount="$parameter.amount" 
				#end
				#if($parameter.id)
					id="$parameter.id" 
				#end
				#if($parameter.mathematicalRelation)
					mathematicalRelation="$parameter.mathematicalRelation" 
				#end
				#if($parameter.variableName)
					variableName="$parameter.variableName" 
				#end
				#if($parameter.isCalculatedAmount)
					isCalculatedAmount="$parameter.isCalculatedAmount" 
				#end
				>
				#foreach($it in $parameter.name)                
					<name xml:lang="$it.langCode">$it.value</name>
				#end
				#if($parameter.uncertainty)
					#set($uncertainty =  $parameter.uncertainty)
					#parse("ES2Uncertainty.vtl")
				#end
				#foreach($it in $parameter.comment)                
					<comment xml:lang="$it.langCode">$it.value</comment>
				#end
			</parameter>
			#end
		</flowData>
		
		<modellingAndValidation>
			
			## representativeness
			#if($dataset.representativeness)
    			#set($representativeness = $dataset.representativeness)
    			<representativeness
					
    				#if($representativeness.systemModelId)
    					systemModelId="$representativeness.systemModelId" 
					#end
					
    				#if($representativeness.percent)
    					percent="$representativeness.percent" 
    				#end
    				>
					
    				#foreach($it in $representativeness.systemModelName)                
    					<systemModelName xml:lang="$it.langCode">$it.value</systemModelName>
    				#end	
					
    				#foreach($it in $representativeness.samplingProcedure)                
    					<samplingProcedure xml:lang="$it.langCode">$it.value</samplingProcedure>
					#end
					
    				#foreach($it in $representativeness.extrapolations)                
    					<extrapolations xml:lang="$it.langCode">$it.value</extrapolations>
    				#end
    			</representativeness>
			#end
				
			## the reviews
			#foreach($review in $dataset.reviews)
				<review
					#if($review.reviewDate)
						reviewDate="$review.reviewDate"
					#end
					#if($review.reviewedMajorRelease)
						reviewedMajorRelease="$review.reviewedMajorRelease"
					#end
					#if($review.reviewedMajorRevision)
						reviewedMajorRevision="$review.reviewedMajorRevision"
					#end
					#if($review.reviewedMinorRelease)
						reviewedMinorRelease="$review.reviewedMinorRelease"
					#end
					#if($review.reviewedMinorRevision)
						reviewedMinorRevision="$review.reviewedMinorRevision"
					#end
					#if($review.reviewerContextId)
						reviewerContextId="$review.reviewerContextId"
					#end
					#if($review.reviewerEmail)
						reviewerEmail="$review.reviewerEmail"
					#end
					#if($review.reviewerId)
						reviewerId="$review.reviewerId"
					#end
					#if($review.reviewerName)
						reviewerName="$review.reviewerName"
					#end
					>
					#if($review.details)
                    <details>
    					#foreach($it in $review.details.text)   
    						<text 
    							#if($it.langCode)
    								xml:lang="$it.langCode"       
    							#end
    							index="$it.index">$it.value</text>      
    					#end
    					#foreach($it in $review.details.images)   
    						<imageUrl 
    							index="$it.index">$it.url</imageUrl>      
    					#end
    					#foreach($it in $review.details.variables)   
    						<variable name="$it.name">$it.value</variable>      
    					#end
                    </details>
					#end
                    <otherDetails
                        xml:lang="en"
                        xsi:type="TString32000">otherDetails</otherDetails>
                </review>
			#end 
				
		</modellingAndValidation>
			
		<administrativeInformation>
			
			#if($dataset.dataEntryBy)
    			#set($dataEntryBy = $dataset.dataEntryBy)			
    			<dataEntryBy
					
					#if($dataEntryBy.personContextId)
						personContextId="$dataEntryBy.personContextId"
					#end
					
					#if($dataEntryBy.personEmail)
						personEmail="$dataEntryBy.personEmail"
					#end
					
					#if($dataEntryBy.personId)
						personId="$dataEntryBy.personId"
					#end
					
					#if($dataEntryBy.personName)
						personName="$dataEntryBy.personName" 
					#end
					/>
			#end
			
			#if($dataset.publication)
    			#set($publication = $dataset.publication)
    			<dataGeneratorAndPublication
					
					#if($publication.accessRestrictedTo)
						accessRestrictedTo="$publication.accessRestrictedTo"
					#end
					
					#if($publication.companyCode)
						companyCode="$publication.companyCode"
					#end
					
					#if($publication.companyContextId)
						companyContextId="$publication.companyContextId"
                    #end
					
					#if($publication.companyId)
						companyId="$publication.companyId"
                    #end
					
					#if($publication.dataPublishedIn)
						dataPublishedIn="$publication.dataPublishedIn"
                    #end
					
					#if($publication.isCopyrightProtected)
						isCopyrightProtected="$publication.isCopyrightProtected"
                    #end
					
					#if($publication.pageNumbers)
						pageNumbers="$publication.pageNumbers"
                    #end
					
					#if($publication.personContextId)
						personContextId="$publication.personContextId"
                    #end
					
					#if($publication.personEmail)
						personEmail="$publication.personEmail"
                    #end
					
					#if($publication.personId)
						personId="$publication.personId"
                    #end
					
					#if($publication.personName)
						personName="$publication.personName"
                    #end
					
					#if($publication.publishedSourceContextId)
						publishedSourceContextId="$publication.publishedSourceContextId"
                    #end
					
					#if($publication.publishedSourceFirstAuthor)
						publishedSourceFirstAuthor="$publication.publishedSourceFirstAuthor"
                    #end
					
					#if($publication.publishedSourceId)
						publishedSourceId="$publication.publishedSourceId"
                    #end
					
					#if($publication.publishedSourceYear)
						publishedSourceYear="$publication.publishedSourceYear" 
					#end
					/>
			#end
			
			#if($dataset.fileAttributes)
    			#set($fileAttributes = $dataset.fileAttributes)
    			<fileAttributes
					
					#if($fileAttributes.contextId)
						contextId="$fileAttributes.contextId"
					#end
					
					#if($fileAttributes.creationTimestamp)
						creationTimestamp="$fileAttributes.creationTimestamp"
					#end
					
					#if($fileAttributes.defaultLanguage)
						defaultLanguage="$fileAttributes.defaultLanguage"
					#end
					
					#if($fileAttributes.fileGenerator)
						fileGenerator="$fileAttributes.fileGenerator"
					#end
					
					#if($fileAttributes.fileTimestamp)
						fileTimestamp="$fileAttributes.fileTimestamp"
					#end
					
					#if($fileAttributes.internalSchemaVersion)
						internalSchemaVersion="$fileAttributes.internalSchemaVersion"
					#end
					
					#if($fileAttributes.lastEditTimestamp)
						lastEditTimestamp="$fileAttributes.lastEditTimestamp"
					#end
					
					#if($fileAttributes.majorRelease)
						majorRelease="$fileAttributes.majorRelease"
					#end
					
					#if($fileAttributes.majorRevision)
						majorRevision="$fileAttributes.majorRevision"
					#end
					
					#if($fileAttributes.minorRelease)
						minorRelease="$fileAttributes.minorRelease"
					#end
					
					#if($fileAttributes.minorRevision)
						minorRevision="$fileAttributes.minorRevision"
					#end					
					>
					
					#foreach($it in $fileAttributes.contextNames)
						<contextName xml:lang="$it.langCode">$it.value</contextName>
					#end	
					## TODO required contexts
				</fileAttributes>
			#end
        </administrativeInformation>
    </activityDataset>
	#end
</ecoSpold>